---
- hosts: server
  become: true
  become_method: sudo
  vars:
  tasks:
#  vars_files:
#    - vars.yml

  tasks:
    - apt:
        name: "{{ packages }}"
      vars:
        packages:
        - apt-utils
        - build-essential
        - curl
        - dkms
        - locales
        - software-properties-common
        - unzip
        - zip

    # some systems, e.g. those on nvidia-docker, already have CUDA installed
    # ansible-playbook -i inventory.cfg deploy.yml --skip-tags "cuda"
    - apt_key:
        url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub

    - apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.0.130-1_amd64.deb

    - name: Install the rest of CUDA based on network deb's config
      tags: cuda
      apt:
        update_cache: yes
        name: cuda

    - apt:
        deb: https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7_7.4.1.5-1+cuda10.0_amd64.deb

    - apt:
        deb: https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7-dev_7.4.1.5-1+cuda10.0_amd64.deb

    - apt:
        update_cache: yes
        name: "{{ packages }}"
      vars:
        packages:
        - libcudnn7
        - libcudnn7-dev

    - apt:
        update_cache: yes
        name: "{{ packages }}"
      vars:
        packages:
        - python3.6
        - python3-pip

#pip3 install pytorch torchvision cuda100